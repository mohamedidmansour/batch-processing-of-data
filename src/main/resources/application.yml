spring:
  application:
    name: batch-processing
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: example
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: create  # Change to 'update' or 'create' if you want to keep data
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false
  rabbitmq:
    password: guest
    username: guest

logging:
  level:
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO

server:
  port: 8082

batch:
  resource: "src/main/resources/customers-data.txt"

mq:
  queue-customer: customer.queue
  queue-customer-bnk: customer.bnk.queue
  exchange-customer: customer.exchange
  exchange-customer-bnk: customer.exchange.bnk
  binding-customer: customer.direct.key
  binding-customer-bnk: customer.bnk.direct.key
